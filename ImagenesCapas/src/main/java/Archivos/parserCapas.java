
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Archivos;

import java_cup.runtime.*;
import Estructuras.Cola;
import Estructuras.MatrizDispersa;
import Main.Controlador;
import Nodos.NodoMatriz;
import java_cup.runtime.XMLElement;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parserCapas extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return symCapas.class;
}

  /** Default constructor. */
  @Deprecated
  public parserCapas() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parserCapas(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parserCapas(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\011\000\002\002\004\000\002\002\004\000\002\002" +
    "\002\000\002\003\006\000\002\003\003\000\002\004\004" +
    "\000\002\004\002\000\002\005\010\000\002\005\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\021\000\010\002\uffff\003\uffff\010\uffff\001\002\000" +
    "\010\002\010\003\007\010\005\001\002\000\004\004\011" +
    "\001\002\000\010\002\000\003\000\010\000\001\002\000" +
    "\010\002\ufffd\003\ufffd\010\ufffd\001\002\000\004\002\001" +
    "\001\002\000\010\003\ufffb\005\ufffb\010\ufffb\001\002\000" +
    "\010\003\015\005\013\010\014\001\002\000\010\002\ufffe" +
    "\003\ufffe\010\ufffe\001\002\000\004\006\017\001\002\000" +
    "\010\003\ufff9\005\ufff9\010\ufff9\001\002\000\010\003\ufffc" +
    "\005\ufffc\010\ufffc\001\002\000\004\010\020\001\002\000" +
    "\004\006\021\001\002\000\004\011\022\001\002\000\004" +
    "\007\023\001\002\000\010\003\ufffa\005\ufffa\010\ufffa\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\021\000\004\002\003\001\001\000\004\003\005\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\004\011\001\001\000\004\005" +
    "\015\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parserCapas$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parserCapas$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parserCapas$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	MatrizDispersa matriz;
	public parserCapas(LexerCup lex) {
        super(lex);
    }		 


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parserCapas$actions {
  private final parserCapas parser;

  /** Constructor */
  CUP$parserCapas$actions(parserCapas parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parserCapas$do_action_part00000000(
    int                        CUP$parserCapas$act_num,
    java_cup.runtime.lr_parser CUP$parserCapas$parser,
    java.util.Stack            CUP$parserCapas$stack,
    int                        CUP$parserCapas$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parserCapas$result;

      /* select the action based on the action number */
      switch (CUP$parserCapas$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-1)).value;
		RESULT = start_val;
              CUP$parserCapas$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-1)), ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parserCapas$parser.done_parsing();
          return CUP$parserCapas$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= INICIO SENTENCIA 
            {
              Object RESULT =null;

              CUP$parserCapas$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-1)), ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), RESULT);
            }
          return CUP$parserCapas$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= 
            {
              Object RESULT =null;

              CUP$parserCapas$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), RESULT);
            }
          return CUP$parserCapas$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // SENTENCIA ::= Numero Llave_a CAPA Llave_c 
            {
              Object RESULT =null;
		int D1left = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-3)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-3)).right;
		Token D1 = (Token)((java_cup.runtime.Symbol) CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-3)).value;
		Controlador.insertarCapa(Integer.parseInt(D1.getLexeme()) , matriz);
              CUP$parserCapas$result = parser.getSymbolFactory().newSymbol("SENTENCIA",1, ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-3)), ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), RESULT);
            }
          return CUP$parserCapas$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // SENTENCIA ::= error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parserCapas$stack.peek()).value;
		  
              CUP$parserCapas$result = parser.getSymbolFactory().newSymbol("SENTENCIA",1, ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), RESULT);
            }
          return CUP$parserCapas$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // CAPA ::= CAPA LINEA 
            {
              Object RESULT =null;

              CUP$parserCapas$result = parser.getSymbolFactory().newSymbol("CAPA",2, ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-1)), ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), RESULT);
            }
          return CUP$parserCapas$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // CAPA ::= 
            {
              Object RESULT =null;
		matriz = new MatrizDispersa();
              CUP$parserCapas$result = parser.getSymbolFactory().newSymbol("CAPA",2, ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), RESULT);
            }
          return CUP$parserCapas$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // LINEA ::= Numero Coma Numero Coma Color PuntoComa 
            {
              Object RESULT =null;
		int R1left = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-5)).left;
		int R1right = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-5)).right;
		Token R1 = (Token)((java_cup.runtime.Symbol) CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-5)).value;
		int R2left = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-3)).left;
		int R2right = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-3)).right;
		Token R2 = (Token)((java_cup.runtime.Symbol) CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-3)).value;
		int R3left = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-1)).left;
		int R3right = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-1)).right;
		Token R3 = (Token)((java_cup.runtime.Symbol) CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-1)).value;
		matriz.insertar(Integer.parseInt(R1.getLexeme()),Integer.parseInt(R2.getLexeme()),String.valueOf(R3.getLexeme()));
              CUP$parserCapas$result = parser.getSymbolFactory().newSymbol("LINEA",3, ((java_cup.runtime.Symbol)CUP$parserCapas$stack.elementAt(CUP$parserCapas$top-5)), ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), RESULT);
            }
          return CUP$parserCapas$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // LINEA ::= error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$parserCapas$stack.peek()).value;
		  
              CUP$parserCapas$result = parser.getSymbolFactory().newSymbol("LINEA",3, ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserCapas$stack.peek()), RESULT);
            }
          return CUP$parserCapas$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parserCapas$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parserCapas$do_action(
    int                        CUP$parserCapas$act_num,
    java_cup.runtime.lr_parser CUP$parserCapas$parser,
    java.util.Stack            CUP$parserCapas$stack,
    int                        CUP$parserCapas$top)
    throws java.lang.Exception
    {
              return CUP$parserCapas$do_action_part00000000(
                               CUP$parserCapas$act_num,
                               CUP$parserCapas$parser,
                               CUP$parserCapas$stack,
                               CUP$parserCapas$top);
    }
}

}
